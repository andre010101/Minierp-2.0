// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniErp2;

#nullable disable

namespace MiniErp2._0.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20221123021514_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MiniErp2.DataModels.Clientes", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("notasid")
                        .HasColumnType("int");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("notasid");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Fornecedores", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Notasid")
                        .HasColumnType("int");

                    b.Property<string>("cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("Notasid");

                    b.ToTable("fornecedor");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Notas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("infoNota")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("preco")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("notas");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Produtos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("clientesid")
                        .HasColumnType("int");

                    b.Property<int>("fornecedorid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("notasid")
                        .HasColumnType("int");

                    b.Property<int>("preco")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clientesid");

                    b.HasIndex("fornecedorid");

                    b.HasIndex("notasid");

                    b.ToTable("produtos");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Clientes", b =>
                {
                    b.HasOne("MiniErp2.DataModels.Notas", "notas")
                        .WithMany("clientes")
                        .HasForeignKey("notasid")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("notas");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Fornecedores", b =>
                {
                    b.HasOne("MiniErp2.DataModels.Notas", null)
                        .WithMany("fornecedores")
                        .HasForeignKey("Notasid");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Produtos", b =>
                {
                    b.HasOne("MiniErp2.DataModels.Clientes", "clientes")
                        .WithMany("produtos")
                        .HasForeignKey("clientesid")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("MiniErp2.DataModels.Fornecedores", "fornecedor")
                        .WithMany("produdos")
                        .HasForeignKey("fornecedorid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MiniErp2.DataModels.Notas", "notas")
                        .WithMany("produto")
                        .HasForeignKey("notasid")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("clientes");

                    b.Navigation("fornecedor");

                    b.Navigation("notas");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Clientes", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Fornecedores", b =>
                {
                    b.Navigation("produdos");
                });

            modelBuilder.Entity("MiniErp2.DataModels.Notas", b =>
                {
                    b.Navigation("clientes");

                    b.Navigation("fornecedores");

                    b.Navigation("produto");
                });
#pragma warning restore 612, 618
        }
    }
}
